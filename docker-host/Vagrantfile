Vagrant.configure("2") do |config|

  # port forwarding
  # 4243: docker
  # 4440: rundeck
  # 3306: mysql server
  # 8080: http application
  # 8081: http application
  # 9000: sonarqube
  # 5556,7001: weblogic
  config.vm.network "private_network", ip: "84.84.87.87"
  ["4243","4440","3306","5556","7001","8080","8081","8082","9000"].each do |port|
      config.vm.network "forwarded_port", guest: port, host: port
  end

  # fix for "stdin: is not a tty" and "ttyname: inappropriate ioctl for device"
  # https://github.com/mitchellh/vagrant/issues/1673#issuecomment-28288042
  config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"

  # if machine fails to boot don't wait too long.
  config.vm.boot_timeout = 60

  # create a synced folder `pwd`/work -> /work
  config.vm.synced_folder "#{ENV['HOMEDRIVE']}\\#{ENV['HOMEPATH']}\\work", "/work", create: true,
    owner: "vagrant", group: "vagrant"

  config.vm.synced_folder "#{ENV['HOMEDRIVE']}\\#{ENV['HOMEPATH']}\\workspace", "/workspace", create: true,
    owner: "vagrant", group: "vagrant"

  # set machine name in vagrant status
  machine_name = "devops-host"
  config.vm.define machine_name do |devops|
  end
  config.vm.provider :virtualbox do |vb|
    # set the name of box in Virtualbox GUI
    vb.name = machine_name
    # allow access to internet
    # (esp machines listed in your etc hosts)
    # http://stackoverflow.com/a/18457420/682912
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]

    # increase allocated RAM so that docker containers
    # can run
    vb.customize ["modifyvm", :id,"--memory", "2048"]
  end

  config.vm.provider :hyperv do |hv|
    hv.vmname = machine_name
    hv.cpus = 1
    hv.memory =  2048
    hv.enable_virtualization_extensions = true
    hv.ip_address_timeout = 240
    hv.vm_integration_services = {
      guest_service_interface: true,
      heartbeat: true,
      key_value_pair_exchange: true,
      shutdown: true,
      time_synchronization: true,
      vss: true
    }
  end


  # Generic Box.
  # config.vm.box = "generic/ubuntu1604"
  config.vm.box = "kmm/ubuntu-xenial64"

  # disable unattended upgrades which cause provisioning to fail
  config.vm.provision :shell, :path => "../scripts/disable-unattended-upgrades.sh"

  # install puppet before provisioning with puppet (agentless mode)
  config.vm.provision :shell, :path => "../scripts/install-puppet.sh"

  # provision with puppet
  config.vm.provision :puppet do |puppet|
    puppet.module_path = "environments/production/modules"
    puppet.manifests_path = "environments/production/manifests/"
    #puppet.options = "--verbose --debug"
    puppet.hiera_config_path = "hiera/hiera.yaml"
  end

  puts "---------------------------------"
  puts "DevOps Automation Dev Environment"
  puts "---------------------------------"

end
